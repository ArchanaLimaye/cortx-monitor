# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# This program is free software: you can redistribute it and/or modify it under the
# terms of the GNU Affero General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>. For any questions
# about this software or licensing, please email opensource@seagate.com or
# cortx-questions@seagate.com.

# Disabling this because thread controller is not being used as of now, and its tests failure
# should not block realstor sensor tests stability changes, which are
# LDR_R1 major features.

Feature: Test Thread Controller Capabilities
    Send thread_controller actuator messages to SSPL and
    verify action was correct.  Actuator messages for the
    ThreadController class are start | stop | restart | status.

Scenario: Send SSPL a thread_controller actuator message to stop raid sensor msg handler
    Given I send in the actuator message to stop raid sensor
    When SSPL Stops the thread for raid sensor msg handler
    Then I get the Stop Successful JSON response message

Scenario: Send SSPL a thread_controller actuator message to start raid sensor msg handler
    Given I send in the actuator message to start raid sensor
    When SSPL Starts the thread for raid sensor msg handler
    Then I get the Start Successful JSON response message

Scenario: Send SSPL a thread_controller actuator to stop raid sensor and then request thread status
    Given I request to stop raid sensor and then I request a thread status
    When SSPL Stops the raid sensor and receives a request for thread status
    Then I get the Stop Successful JSON message then I get the thread status message

Scenario: Send SSPL a thread_controller actuator to start raid sensor and then request thread status
    Given I request to start raid sensor and then I request a thread status
    When SSPL Starts the raid sensor and receives a request for thread status
    Then I get the Start Successful JSON message then I get the thread status message
