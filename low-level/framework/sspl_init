#!/bin/bash

set -u -o pipefail

SCRIPT_NAME=$(basename $0)
SSPL_CONF="/etc/sspl_ll.conf"
SSPL_CONFIGURED="/var/sspl/sspl-configured"
ROLES="gw ssu vm cmu"

SSU_DEPENDENCY_RPMS=(
                "epel-release"
                "sg3_utils"
                "gemhpi"
                "pull_sea_logs"
                "python-hpi"
                "zabbix-agent-lib"
                "zabbix-api-gescheit"
                "zabbix-xrtx-lib"
                "python-openhpi-baselib"
                "zabbix-collector"
     )

SSU_REQUIRED_PROCESSES=(
                "openhpid"
                "dcs-collectord"
                )

VM_DEPENDENCY_RPMS=(
                "epel-release"
                "lxqt-policykit"
                )
usage() {
    cat << EOF
$SCRIPT_NAME [{check|config [-f] [-r <ssu|gw|cmu|vm>]]
config options:
    -f  Force reinitialization. Do not prompt
    -r  Role to be configured on the current node
    -s  Skip RabbitMQ reset step

EOF
    exit 1
}

check_for_dep_rpms() {

   rpms=("$@");

   for rpm in "${rpms[@]}"; do
        rpm -q --quiet $rpm;

        if [ $? -eq 1 ]; then
          echo "- Required rpm '$rpm' not installed, exiting";
          exit 1;
        fi
   done
}

check_for_active_processes() {

   processes=("$@");

   for proc in "${processes[@]}"; do
        pgrep -x $proc > /dev/null;

        if [ $? -eq 1 ]; then
            echo "- Required process '$proc' not running, exiting";
            exit 1;
        fi
   done

}

check_dependencies() {

    # Check for dependency rpms and required processes active state based on role
    case $1 in
       "ssu")
              echo "Checking for dependency rpms for role '$1'";
              check_for_dep_rpms "${SSU_DEPENDENCY_RPMS[@]}";

              echo "Checking for required processes running state for role '$1'";
              check_for_active_processes "${SSU_REQUIRED_PROCESSES[@]}";
              ;;

       "vm"|"gw"|"cmu")
              echo "Checking for dependency rpms for role '$1'";
              check_for_dep_rpms "${VM_DEPENDENCY_RPMS[@]}";

              # No processes to check in vm/gw/cmu env
              ;;

       *)
              echo -e "No rpm or process dependencies set, to check for supplied role '$1', skipping checks.\n";
              ;;
    esac
}

config_sspl() {
    force=0
    role=
    rabbitmq_reset=1

    while [ $# -gt 0 ]; do
        case $1 in
            -f )
                force=1
                ;;
            -r )
                [ $# -lt 2 ] && usage
                shift 1 && role=$1
                [[ $ROLES =~ (^| )$role($| ) ]] || usage
                ;;
            -s )
                rabbitmq_reset=
                ;;
            * )
                usage
                ;;
        esac
        shift 1
    done

    [ $(id -u) -ne 0 ] && echo "Run this command with root privileges!!" &&
        exit 1
    [ -f $SSPL_CONF ] || {
        echo "Missing configuration!! Create $SSPL_CONF and rerun.";
        exit 1;
    }

    [ -f $SSPL_CONFIGURED ] && {
        [ "$force" = "1" ] && ans="y" || ans=;
        while [ "$ans" != "y" -a "$ans" != "n" ]; do
            echo -n "SSPL is already initialized. Reinitialize SSPL? [y/n]: ";
            read ans;
        done;
        [ "$ans" != "y" ] && exit 1;
        rm -f $SSPL_CONFIGURED;
        systemctl stop sspl-ll.service;
        systemctl disable sspl-ll.service;
    }

    # Configure role
    [ -z "$role" ] || sed -i "s/^setup=.*/setup=$role/g" $SSPL_CONF

    # Check for sspl required processes and misc dependencies like installation,etc based on 'role'
    [ -z "$role" ] || check_dependencies $role

    # Add sspl-ll user to required groups and sudoers file etc.
    echo "Initializing SSPL configuration ... "
    /opt/seagate/sspl/low-level/framework/sspl_ll_reinit_CS_A

    # Create /tmp/dcs/hpi if required
    [ ! -d "/tmp/dcs/hpi" ] && mkdir -p /tmp/dcs/hpi &&
        id -u zabbix > /dev/null 2>&1 && chown zabbix:zabbix /tmp/dcs/hpi

    # Ensure rabbitmq-server has started
    systemctl start rabbitmq-server

    # Reset RabbitMQ configuration
    [ -z "$rabbitmq_reset" ] || {
        /sbin/rabbitmqctl stop_app;
        /sbin/rabbitmqctl reset;
        /sbin/rabbitmqctl start_app;
    }

    # Add required user and vhost to RabbitMQ. Set user permissions etc.
    echo "Creating required RABBITMQ configuration.... "
    /opt/seagate/sspl/low-level/framework/sspl_ll_rabbitmq_reinit_CS_A
    echo "SSPL configured successfully."
    mkdir -p $(dirname $SSPL_CONFIGURED)

    # Create mdadm.conf to set ACL on it.
    touch /etc/mdadm.conf
    setfacl -m u:sspl-ll:rw /etc/mdadm.conf
    touch $SSPL_CONFIGURED

    systemctl enable sspl-ll.service
    systemctl start sspl-ll.service
}

cmd="config"
[ $# -ge 1 ] && cmd=$1 && shift 1

case $cmd in
    check )
        [ -f $SSPL_CONFIGURED ]  && exit 0
        logger -i -p local3.err "SSPL is not configured. Run /opt/seagate/sspl/sspl_init"
        exit 1
        ;;

    config )
        config_sspl $*
        ;;

    * )
        usage
        ;;
esac
