#!/bin/bash

set -e -u -o pipefail

##############################################################################
# This script is meant to be used by developers.
# Components are not supposed to install/start consul by itself in production,
# provisioner would do. This script calls all the provisioner
# scripts sequentially. It will replace sspl_init eventually.
##############################################################################

SCRIPT_DIR=$(dirname $0)

# Install consul if not available
if ! [ -x "$(command -v /opt/seagate/eos/hare/bin/consul)" ]; then
    if ! [ -x "$(command -v wget)" ]; then
        yum install -y wget
    fi
    wget https://releases.hashicorp.com/consul/1.7.0/consul_1.7.0_linux_amd64.zip
    if ! [ -x "$(command -v unzip)" ]; then
        yum install -y unzip
    fi
    unzip consul_1.7.0_linux_amd64.zip
    mkdir -p /opt/seagate/eos/hare/bin
    mv ./consul /opt/seagate/eos/hare/bin/consul
    rm consul_1.7.0_linux_amd64.zip
fi

if ! [ "$(rpm -qa | grep eos-prvsnr-cli)" ]; then
    pkg_name=$(curl -s http://ci-storage.mero.colo.seagate.com/releases/eos/integration/centos-7.7.1908/last_successful/|grep eos-prvsnr-cli-1.0.0| sed 's/<\/*[^>]*>//g'|cut -d' ' -f1)
    yum install -y http://ci-storage.mero.colo.seagate.com/releases/eos/integration/centos-7.7.1908/last_successful/$pkg_name
    sh /opt/seagate/eos-prvsnr/cli/setup-provisioner -S
fi

# Start /opt/seagate/eos/hare/bin/consul if not running
CONSUL_PS=$(ps -aux | grep "consul" | grep -v "grep" || true)
[ -z "$CONSUL_PS" ] && /opt/seagate/eos/hare/bin/consul agent -dev -config-file=$SCRIPT_DIR/bin/consul_config.json &>/dev/null &

$SCRIPT_DIR/bin/sspl_setup_rabbitmq_cluster
$SCRIPT_DIR/bin/sspl_post_install -p EES
$SCRIPT_DIR/bin/sspl_setup_init -r eos
$SCRIPT_DIR/bin/sspl_config
sudo systemctl start sspl-ll.service
sudo systemctl start rabbitmq-server.service

# TODO: Temporary change until HA integration is in place
# Switch SSPL to active state to resume all the suspended plugins. If SSPL is
# not switched to active state then plugins will not respond and tests will
# fail. Sending SIGUP to SSPL makes SSPL to read state file and switch state.
echo "*************************************************************************"
echo "Changing SSPL state to 'active', disable step once HA integration complete"
echo "*************************************************************************"
echo "state=active" > /var/eos/sspl/data/state.txt
PID=`ps -aux| grep "sspl_ll_d" | grep -v "grep" | awk '{print $2}'`
kill -s SIGHUP $PID

