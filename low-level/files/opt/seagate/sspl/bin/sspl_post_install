#!/bin/bash

# Stop the script if any command fails
set -e -u -o pipefail

script_dir=$(dirname $0)

# Import common constants
source $script_dir/constants.sh

SCRIPT_NAME=$(basename $0)

RSYSLOG_CONF="/etc/rsyslog.d/0-iemfwd.conf"
RSYSLOG_SSPL_CONF="/etc/rsyslog.d/1-ssplfwd.conf"
PACEMAKER_INSTALLATION_PATH="/lib/ocf/resource.d/seagate/"
SSPL_RA_PATH="/opt/seagate/$PRODUCT/sspl/bin/pacemaker/sspl_stateful_resource_agent"

usage() {
    cat << EOF
$SCRIPT_NAME [[-p <EES>]]
    -p product to be configured
EOF
    exit 1
}

# Install packages which are not available in YUM repo, from PIP
python3 -m pip install -r $SSPL_BASE_DIR/conf/requirements.txt

# NOTE: By default the sspl default conf file will not be copied.
# The provisioner is supposed to copy the appropriate conf file based
# on product/env and start SSPL with it.
# TODO: Disable this default copy once the provisioners are ready.
[ -f $SSPL_CONF ] || cp $SSPL_BASE_DIR/conf/sspl.conf.$PRODUCT $SSPL_CONF

# Copy rsyslog configuration
[ -f $RSYSLOG_CONF ] ||
    cp $SSPL_BASE_DIR/conf/$RSYSLOG_CONF $RSYSLOG_CONF

[ -f $RSYSLOG_SSPL_CONF ] ||
    cp $SSPL_BASE_DIR/conf/$RSYSLOG_SSPL_CONF $RSYSLOG_SSPL_CONF

# Copy sspl-ll.service file and enable service
cp $SSPL_BASE_DIR/conf/sspl-ll.service.$PRODUCT /etc/systemd/system/sspl-ll.service
systemctl enable sspl-ll.service
systemctl daemon-reload

# Copy IEC mapping files
mkdir -p $PRODUCT_BASE_DIR/iem/iec_mapping
cp -R $SSPL_BASE_DIR/resources/iem/iec_mapping/* $PRODUCT_BASE_DIR/iem/iec_mapping

# Configure rabbitmq
$script_dir/rabbitmq_setup

# Copy SSPL Resource agent script from SSPL repo to
# /lib/ocf/resource.d/seagate which is the installation
# path for Pacemaker
echo "copying SSPL resource agent to pacemaker installation path"
# Check whether Pacemaker installation path exist or not
[ ! -d $PACEMAKER_INSTALLATION_PATH ] && mkdir -p $PACEMAKER_INSTALLATION_PATH
[ -f $SSPL_RA_PATH ] &&
    install --verbose $SSPL_RA_PATH $PACEMAKER_INSTALLATION_PATH

