#!/bin/bash
#
# Perform initializations prior to starting sspl_ll
#
# Create sspl-ll user and assign to groups
#
# Usage:
#    ./sspl_ll_reinit_CS_A
#

chown -R sspl-ll:root /opt/seagate/sspl/low-level

# Create a link to low-level cli for easy global access
ln -sf /opt/seagate/sspl/low-level/cli/sspl-ll-cli /usr/bin

# Assign the required groups
usermod -a -G systemd-journal sspl-ll
usermod -a -G dialout sspl-ll
usermod -a -G disk sspl-ll

# Update the sudoers file with the sspl-ll user and available commands
SUDO_LINE="sspl-ll	ALL = NOPASSWD: /usr/sbin/smartctl, /usr/sbin/mdadm, /usr/bin/mount, /usr/bin/umount, /usr/sbin/swapon, /usr/sbin/swapoff, /usr/sbin/hdparm, /usr/bin/systemctl, /usr/sbin/wbcli"
grep -q "$SUDO_LINE" /etc/sudoers || echo "$SUDO_LINE" >> /etc/sudoers

# Update the crontab to log free space as IEMs on a daily basis on SMU
ROLE=`facter -p | grep role`
if [ "$ROLE" = "role => cc" ]; then
    CRON_LINE_SEARCH="0 0 \* \* \* root /opt/seagate/sspl/low-level/files/sspl_free_space.py"
    CRON_LINE="0 0 * * * root /opt/seagate/sspl/low-level/files/sspl_free_space.py"
    grep -q "$CRON_LINE_SEARCH" /etc/crontab || echo "$CRON_LINE" >> /etc/crontab
    chmod +x /opt/seagate/sspl/low-level/files/sspl_free_space.py
fi

# Automatically install dependencies based on config file
sspl-ll-cli --checkdeps --autoinstall

# Comment out the tty requirement in sudoers file
sed -i "s/^Defaults    requiretty.*/#Defaults    requiretty/" /etc/sudoers

# Start with a clean updated drive_manager.json file and serialized dir
rm -Rf /tmp/dcs/dmreport

# Grant IO abilities so that we can send ATA commands to drives as sspl-ll user
setcap cap_sys_rawio=ep /usr/bin/python2.7

# Make sure security policies are in place
cp -f /opt/seagate/sspl/low-level/files/sspl-ll_dbus_policy.rules /etc/polkit-1/rules.d
cp -f /opt/seagate/sspl/low-level/files/sspl-ll_dbus_policy.conf /etc/dbus-1/system.d

mkdir -p /etc/sspl-ll/templates/snmp
cp -f /opt/seagate/sspl/low-level/snmp/* /etc/sspl-ll/templates/snmp

rm -Rf /var/run/sspl_ll

# Enable SNMP traps on the PDU to be sent to the CMU
if ping -c 1 172.16.1.221 &> /dev/null
then
 echo "Enable SNMP traps on the PDU at 172.16.1.221 to be sent to the CMU"
 curl -skd '{
      "jsonrpc": "2.0",
      "method": "performBulk",
      "params": {
          "requests": [
              // First request: Eventengine::modifyAction()
              {"rid":"/event_engine",
 "json":{"jsonrpc":"2.0", "method":"modifyAction", "params":{"action":{"id":"SystemSnmpTrapAction", "name":"System SNMP Notification Action", "isSystem":true, "type":"SendSnmpTrap", "arguments":[{"key":"SnmpNotfType", "value":"v2Trap"},{"key":"SnmpTrapDest1", "value":"172.16.0.41:1620:public"},{"key":"SnmpTrapDest2", "value":":162:"},{"key":"SnmpTrapDest3", "value":":162:"}]}}, "id":1127}},
              // Second request: Eventengine::modifyAction()
              {"rid":"/event_engine",
 "json":{"jsonrpc":"2.0", "method":"modifyRule", "params":{"rule":{"id":"SystemSnmpTrapRule", "name":"System SNMP Notification Rule", "isSystem":true, "isEnabled":true, "isAutoRearm":true, "hasMatched":false, "condition":{"negate":false, "operation":0, "matchType":2, "eventId":["**"], "conditions":[]}, "actionIds":["SystemSnmpTrapAction"], "arguments":[]}}, "id":1128}}]},
      },
      "id": 1129
 }' https://admin:admin@172.16.1.221/bulk
fi

# Enable SNMP traps on the PDU to be sent to the CMU
if ping -c 1 172.16.1.222 &> /dev/null
then
 echo "Enable SNMP traps on the PDU at 172.16.1.222 to be sent to the CMU"
 curl -skd '{
      "jsonrpc": "2.0",
      "method": "performBulk",
      "params": {
          "requests": [
              // First request: Eventengine::modifyAction()
              {"rid":"/event_engine",
 "json":{"jsonrpc":"2.0", "method":"modifyAction", "params":{"action":{"id":"SystemSnmpTrapAction", "name":"System SNMP Notification Action", "isSystem":true, "type":"SendSnmpTrap", "arguments":[{"key":"SnmpNotfType", "value":"v2Trap"},{"key":"SnmpTrapDest1", "value":"172.16.0.41:1620:public"},{"key":"SnmpTrapDest2", "value":":162:"},{"key":"SnmpTrapDest3", "value":":162:"}]}}, "id":1127}},
              // Second request: Eventengine::modifyAction()
              {"rid":"/event_engine",
 "json":{"jsonrpc":"2.0", "method":"modifyRule", "params":{"rule":{"id":"SystemSnmpTrapRule", "name":"System SNMP Notification Rule", "isSystem":true, "isEnabled":true, "isAutoRearm":true, "hasMatched":false, "condition":{"negate":false, "operation":0, "matchType":2, "eventId":["**"], "conditions":[]}, "actionIds":["SystemSnmpTrapAction"], "arguments":[]}}, "id":1128}}]},
      },
      "id": 1129
 }' https://admin:admin@172.16.1.222/bulk
fi

