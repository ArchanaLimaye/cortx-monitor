1. Install following latest sspl RPMs on both the node
    - libsspl_sec-<version>_<git-id>.el7.centos.x86_64
    - libsspl_sec-method_none-<version>_<git-id>.el7.centos.x86_64
    - systemd-python36-<version>_<git-id>.el7.centos.x86_64
    - sspl-<version>_<git-id>.el7.centos.noarch

2. Initialization of SSPL
    - Make sure rabbitmq is installed on both the nodes.

    - If system is not provisioned, execute following steps to initialize SSPL:
        /opt/seagate/eos/sspl/bin/sspl_post_install -p EES
        /opt/seagate/eos/sspl/bin/sspl_setup_init -r eos
        /opt/seagate/eos/sspl/bin/sspl_config
        systemctl start sspl-ll.service
        systemctl start rabbitmq-server.service

3. Installation of SSPL resource agent script
    - Copy Resource Agent script from
      "cp /opt/seagate/eos/sspl/bin/pacemaker/sspl_stateful_resource_agent /lib/ocf/resource.d/sspl/sspl_stateful"

4. Creation of the SSPL resource (Master/Slave approach)
    - "pcs resource create sspl ocf:sspl:sspl_stateful master failure-timeout=10s"
    - This should start the service on both the Nodes(By default SSPL will
      start in Degraded state)

Scenarios to test:
1. Master Node must be promoted and SSPL should switch to Active state.
   - This we can validate with SSPL logs:
     "INFO Received SIGHUP to switch to active state (sspl_ll_d)"
2. Stop the service on Slave Node:
   - "systemctl stop sspl-ll"
     Pacemaker should restart the service on same node.
3. Failure of the service on Master Node.
   - (changing sspl configuration file (/etc/sspl.conf) with unexpected changes
     will fail the service)
   - After some time period, Master node should be demoted and Slave node
     should be promoted and SSPL should change state from degraded to active.
